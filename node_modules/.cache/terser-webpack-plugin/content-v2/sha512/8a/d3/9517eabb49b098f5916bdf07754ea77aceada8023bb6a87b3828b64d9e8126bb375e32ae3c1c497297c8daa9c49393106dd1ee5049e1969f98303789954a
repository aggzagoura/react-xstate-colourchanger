{"code":"(this[\"webpackJsonpxstate-react-typescript-template\"]=this[\"webpackJsonpxstate-react-typescript-template\"]||[]).push([[0],[,,function(t,e,o){\"use strict\";o.r(e),o.d(e,\"dmMachine\",(function(){return y}));var n=o(1),a=o(0);o(3);function r(t){return Object(a.b)((e=>({type:\"SPEAK\",value:t})))}function i(){return Object(a.b)(\"LISTEN\")}const p={John:{person:\"John Appleseed\"},Mary:{person:\"Mary Curie\"},George:{person:\"George Smith\"},Axel:{person:\"Axel Rose\"},Sebastian:{person:\"Sebastian Bach\"},\"on Monday\":{day:\"Monday\"},\"on Tuesday\":{day:\"Tuesday\"},\"on Wednesday\":{day:\"Wednesday\"},\"on Thursday\":{day:\"Thursday\"},\"on Friday\":{day:\"Friday\"},\"on Saturday\":{day:\"Saturday\"},\"on Sunday\":{day:\"Sunday\"},\"at 5\":{time:\"5:00\"},\"at 6\":{time:\"6:00\"},\"at 7\":{time:\"7:00\"},\"at 8\":{time:\"8:00\"},\"at 9\":{time:\"9:00\"},\"at 10\":{time:\"10:00\"},\"at 11\":{time:\"11:00\"},\"at 12\":{time:\"12:00\"}},c={\"yes of course\":!0,sure:!0,absolutely:!0,yes:!0,\"no way\":!1,no:!1};let s=c.yes,m=c.no;const y={initial:\"init\",states:{init:{on:{CLICK:\"welcome\"}},welcome:Object(n.a)({on:{RECOGNISED:{target:\"query\",actions:Object(a.a)((t=>({option:t.recResult})))}}},(d=\"What would you like to do? Your options are appointment, to do item or timer\",{initial:\"prompt\",states:{prompt:{entry:r(d),on:{ENDSPEECH:\"ask\"}},ask:{entry:Object(a.b)(\"LISTEN\")}}})),query:{invoke:{id:\"rasa\",src:(t,e)=>E(t.option),onDone:{target:\"menu\",actions:[Object(a.a)(((t,e)=>({option:e.data.intent.name}))),(t,e)=>console.log(e.data)]},onError:{target:\"welcome\",actions:(t,e)=>console.log(e.data)}}},menu:{initial:\"prompt\",on:{ENDSPEECH:[{target:\"todo\",cond:t=>\"todo\"===t.option},{target:\"timer\",cond:t=>\"timer\"===t.option},{target:\"appointment\",cond:t=>\"appointment\"===t.option}]},states:{prompt:{entry:Object(a.b)((t=>({type:\"SPEAK\",value:\"OK. I understand.\"})))}}},todo:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(a.b)((t=>({type:\"SPEAK\",value:\"Let's create a to do item\"})))}}},timer:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(a.b)((t=>({type:\"SPEAK\",value:\"Let's create a timer\"})))}}},appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:Object(a.b)((t=>({type:\"SPEAK\",value:\"Let's create an appointment\"})))}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:t=>\"person\"in(p[t.recResult]||{}),actions:Object(a.a)((t=>({person:p[t.recResult].person}))),target:\"day\"},{target:\".nomatch\"}]},states:{prompt:{entry:r(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:i()},nomatch:{entry:r(\"Sorry I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},day:{initial:\"prompt\",on:{RECOGNISED:[{cond:t=>\"day\"in(p[t.recResult]||{}),actions:Object(a.a)((t=>({day:p[t.recResult].day}))),target:\"wholeday\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(a.b)((t=>({type:\"SPEAK\",value:\"OK. \".concat(t.person,\". On which day is your meeting?\")}))),on:{ENDSPEECH:\"ask\"}},ask:{entry:i()},nomatch:{entry:r(\"Sorry I didn't understand\"),on:{ENDSPEECH:\"prompt\"}}}},wholeday:{initial:\"prompt\",on:{RECOGNISED:[{cond:t=>c[t.recResult]===m,target:\"time\"},{cond:t=>c[t.recResult]===s,target:\"confirm_meeting_whole_day\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(a.b)((t=>({type:\"SPEAK\",value:\"OK. \".concat(t.person,\" on \").concat(t.day,\". Will it take the whole day?\")}))),on:{ENDSPEECH:\"ask\"}},ask:{entry:i()},nomatch:{entry:r(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},time:{initial:\"prompt\",on:{RECOGNISED:[{cond:t=>\"time\"in(p[t.recResult]||{}),actions:Object(a.a)((t=>({time:p[t.recResult].time}))),target:\"confirm_time\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(a.b)((t=>({type:\"SPEAK\",value:\"OK. \".concat(t.day,\". What time is your meeting?\")}))),on:{ENDSPEECH:\"ask\"}},ask:{entry:i()},nomatch:{entry:r(\"Sorry I don't know that\"),on:{ENDSPEECH:\"prompt\"}}}},confirm_meeting_whole_day:{initial:\"prompt\",on:{RECOGNISED:[{cond:t=>c[t.recResult]===m,target:\"init\"},{cond:t=>c[t.recResult]===s,target:\"confirmed\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(a.b)((t=>({type:\"SPEAK\",value:\"Do you want to create an appointment with \".concat(t.person,\" on \").concat(t.day,\" for the whole day?\")}))),on:{ENDSPEECH:\"ask\"}},ask:{entry:i()},nomatch:{entry:r(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},confirm_time:{initial:\"prompt\",on:{RECOGNISED:[{cond:t=>c[t.recResult]===m,target:\"who\"},{cond:t=>c[t.recResult]===s,target:\"confirmed\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(a.b)((t=>({type:\"SPEAK\",value:\"Do you want to create an appointment with \".concat(t.person,\" on \").concat(t.day,\" at \").concat(t.time,\"?\")}))),on:{ENDSPEECH:\"ask\"}},ask:{entry:i()},nomatch:{entry:r(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},confirmed:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(a.b)((t=>({type:\"SPEAK\",value:\"Your appointment has been created!\"})))}}}}};var d;const E=t=>fetch(new Request(\"https://cors-anywhere.herokuapp.com/https://rasa-nlu-app.herokuapp.com/model/parse\",{method:\"POST\",headers:{Origin:\"http://localhost:3000/react-xstate-colourchanger\"},body:'{\"text\": \"'.concat(t,'\"}')})).then((t=>t.json()))},function(t,e,o){}],[[2,1,2]]]);","name":"static/js/main.1823c7b4.chunk.js","map":{"version":3,"sources":["static/js/main.1823c7b4.chunk.js"],"names":["this","push","module","__webpack_exports__","__webpack_require__","r","d","dmMachine","_Users_aggzagoura_react_xstate_colourchanger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","xstate__WEBPACK_IMPORTED_MODULE_1__","say","text","Object","_context","type","value","listen","grammar","John","person","Mary","George","Axel","Sebastian","on Monday","day","on Tuesday","on Wednesday","on Thursday","on Friday","on Saturday","on Sunday","at 5","time","at 6","at 7","at 8","at 9","at 10","at 11","at 12","grammar2","yes of course","sure","absolutely","yes","no way","no","a","b","initial","states","init","on","CLICK","welcome","RECOGNISED","target","actions","context","option","recResult","prompt","entry","ENDSPEECH","ask","query","invoke","id","src","event","nluRequest","onDone","data","intent","name","console","log","onError","menu","cond","todo","timer","appointment","who","nomatch","concat","wholeday","confirm_meeting_whole_day","confirm_time","confirmed","fetch","Request","proxyurl","method","headers","Origin","body","then","json","exports"],"mappings":"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"},"input":"(this[\"webpackJsonpxstate-react-typescript-template\"] = this[\"webpackJsonpxstate-react-typescript-template\"] || []).push([[0],[\n/* 0 */,\n/* 1 */,\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dmMachine\", function() { return dmMachine; });\n/* harmony import */ var _Users_aggzagoura_react_xstate_colourchanger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);\n/* harmony import */ var _styles_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);\n/* harmony import */ var _styles_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_scss__WEBPACK_IMPORTED_MODULE_2__);\n// import \"./styles.scss\";\n// import * as React from \"react\";\n// import * as ReactDOM from \"react-dom\";\n// import { Machine, assign, send, State } from \"xstate\";\n// import { useMachine, asEffect } from \"@xstate/react\";\n// import { inspect } from \"@xstate/inspect\";\n// import { dmMachine } from \"./dmAppointment\";\n// inspect({\n//     url: \"https://statecharts.io/inspect\",\n//     iframe: false\n// });\n// import { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\n// const machine = Machine<SDSContext, any, SDSEvent>({\n//     id: 'root',\n//     type: 'parallel',\n//     states: {\n//         dm: {\n//             ...dmMachine\n//         },\n//         asrtts: {\n//             initial: 'idle',\n//             states: {\n//                 idle: {\n//                     on: {\n//                         LISTEN: 'recognising',\n//                         SPEAK: {\n//                             target: 'speaking',\n//                             actions: assign((_context, event) => { return { ttsAgenda: event.value } })\n//                         }\n//                     }\n//                 },\n//                 recognising: {\n// \t\t    initial: 'progress',\n//                     entry: 'recStart',\n//                     exit: 'recStop',\n//                     on: {\n//                         ASRRESULT: {\n//                             actions: ['recLogResult',\n//                                 assign((_context, event) => { return { recResult: event.value } })],\n//                             target: '.match'\n//                         },\n//                         RECOGNISED: 'idle'\n//                     },\n//                     states: {\n// \t\t    \tprogress: {\n// \t\t\t},\t    \t\t\t\t\t\n//                         match: {\n//                             entry: send('RECOGNISED'),\n//                         },\n//                     }\n//                 },\n//                 speaking: {\n//                     entry: 'ttsStart',\n//                     on: {\n//                         ENDSPEECH: 'idle',\n//                     }\n//                 }\n//             }\n//         }\n//     },\n// },\n//     {\n//         actions: {\n//             recLogResult: (context: SDSContext) => {\n//                 /* context.recResult = event.recResult; */\n//                 console.log('<< ASR: ' + context.recResult);\n//             },\n//             test: () => {\n//                 console.log('test')\n//             },\n//             logIntent: (context: SDSContext) => {\n//                 /* context.nluData = event.data */\n//                 console.log('<< NLU intent: ' + context.nluData.intent.name)\n//             }\n//         },\n//     });\n// interface Props extends React.HTMLAttributes<HTMLElement> {\n//     state: State<SDSContext, any, any, any>;\n// }\n// const ReactiveButton = (props: Props): JSX.Element => {\n//     switch (true) {\n//         case props.state.matches({ asrtts: 'recognising' }):\n//             return (\n//                 <button type=\"button\" className=\"glow-on-hover\"\n//                     style={{ animation: \"glowing 20s linear\" }} {...props}>\n//                     Listening...\n//                 </button>\n//             );\n//         case props.state.matches({ asrtts: 'speaking' }):\n//             return (\n//                 <button type=\"button\" className=\"glow-on-hover\"\n//                     style={{ animation: \"bordering 1s infinite\" }} {...props}>\n//                     Speaking...\n//                 </button>\n//             );\n//         default:\n//             return (\n//                 <button type=\"button\" className=\"glow-on-hover\" {...props}>\n//                     Click to start\n//                 </button >\n//             );\n//     }\n// }\n// function App() {\n//     const { speak, cancel, speaking } = useSpeechSynthesis({\n//         onEnd: () => {\n//             send('ENDSPEECH');\n//         },\n//     });\n//     const { listen, listening, stop } = useSpeechRecognition({\n//         onResult: (result: any) => {\n//             send({ type: \"ASRRESULT\", value: result });\n//         },\n//     });\n//     const [current, send, service] = useMachine(machine, {\n//         devTools: true,\n//         actions: {\n//             recStart: asEffect(() => {\n//                 console.log('Ready to receive a color command.');\n//                 listen({\n//                     interimResults: false,\n//                     continuous: true\n//                 });\n//             }),\n//             recStop: asEffect(() => {\n//                 console.log('Recognition stopped.');\n//                 stop()\n//             }),\n//             changeColour: asEffect((context) => {\n//                 console.log('Repainting...');\n//                 document.body.style.background = context.recResult;\n//             }),\n//             ttsStart: asEffect((context, effect) => {\n//                 console.log('Speaking...');\n//                 speak({ text: context.ttsAgenda })\n//             }),\n//             ttsCancel: asEffect((context, effect) => {\n//                 console.log('TTS STOP...');\n//                 cancel()\n//             })\n//             /* speak: asEffect((context) => {\n// \t     * console.log('Speaking...');\n//              *     speak({text: context.ttsAgenda })\n//              * } */\n//         }\n//     });\n//     return (\n//         <div className=\"App\">\n//             <ReactiveButton state={current} onClick={() => send('CLICK')} />\n//         </div>\n//     )\n// };\n// /* RASA API\n//  *  */\n// const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n// const rasaurl = 'https://rasa-nlu-app.herokuapp.com/model/parse'\n// const nluRequest = (text: string) =>\n//     fetch(new Request(proxyurl + rasaurl, {\n//         method: 'POST',\n//         headers: { 'Origin': 'http://maraev.me' }, // only required with proxy\n//         body: `{\"text\": \"${text}\"}`\n//     }))\n//         .then(data => data.json());\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(\n//     <App />,\n//     rootElement);\nfunction say(text){return Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])(_context=>({type:\"SPEAK\",value:text}));}function listen(){return Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])('LISTEN');}const grammar={\"John\":{person:\"John Appleseed\"},\"Mary\":{person:\"Mary Curie\"},\"George\":{person:\"George Smith\"},\"Axel\":{person:\"Axel Rose\"},\"Sebastian\":{person:\"Sebastian Bach\"},\"on Monday\":{day:\"Monday\"},\"on Tuesday\":{day:\"Tuesday\"},\"on Wednesday\":{day:\"Wednesday\"},\"on Thursday\":{day:\"Thursday\"},\"on Friday\":{day:\"Friday\"},\"on Saturday\":{day:\"Saturday\"},\"on Sunday\":{day:\"Sunday\"},\"at 5\":{time:\"5:00\"},\"at 6\":{time:\"6:00\"},\"at 7\":{time:\"7:00\"},\"at 8\":{time:\"8:00\"},\"at 9\":{time:\"9:00\"},\"at 10\":{time:\"10:00\"},\"at 11\":{time:\"11:00\"},\"at 12\":{time:\"12:00\"}};const grammar2={\"yes of course\":true,\"sure\":true,\"absolutely\":true,\"yes\":true,\"no way\":false,\"no\":false};let a=grammar2[\"yes\"];let b=grammar2[\"no\"];function promptAndAsk(prompt){return{initial:'prompt',states:{prompt:{entry:say(prompt),on:{ENDSPEECH:'ask'}},ask:{entry:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])('LISTEN')}}};}const dmMachine={initial:'init',states:{init:{on:{CLICK:'welcome'}},welcome:Object(_Users_aggzagoura_react_xstate_colourchanger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({on:{RECOGNISED:{target:\"query\",actions:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* assign */ \"a\"])(context=>{return{option:context.recResult};})}}},promptAndAsk(\"What would you like to do? Your options are appointment, to do item or timer\")),query:{invoke:{id:'rasa',src:(context,event)=>nluRequest(context.option),onDone:{target:'menu',actions:[Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* assign */ \"a\"])((context,event)=>{return{option:event.data.intent.name};}),(context,event)=>console.log(event.data)]//actions: assign({ intent: (context: SDSContext, event: any) =>{ return event.data }})\n},onError:{target:'welcome',actions:(context,event)=>console.log(event.data)}}},menu:{initial:\"prompt\",on:{ENDSPEECH:[{target:'todo',cond:context=>context.option==='todo'},{target:'timer',cond:context=>context.option==='timer'},{target:'appointment',cond:context=>context.option==='appointment'}]},states:{prompt:{entry:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])(context=>({type:\"SPEAK\",value:\"OK. I understand.\"}))}/*            nomatch: {\n                    entry: say(\"Sorry, I don't understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n        } */}},todo:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])(context=>({type:\"SPEAK\",value:\"Let's create a to do item\"}))}}},timer:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])(context=>({type:\"SPEAK\",value:\"Let's create a timer\"}))}}},appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])(context=>({type:\"SPEAK\",value:\"Let's create an appointment\"}))}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"person\"in(grammar[context.recResult]||{}),actions:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* assign */ \"a\"])(context=>{return{person:grammar[context.recResult].person};}),target:\"day\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"day\"in(grammar[context.recResult]||{}),actions:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* assign */ \"a\"])(context=>{return{day:grammar[context.recResult].day};}),target:\"wholeday\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\". On which day is your meeting?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I didn't understand\"),on:{ENDSPEECH:\"prompt\"}}}},wholeday:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===b,target:\"time\"},{cond:context=>grammar2[context.recResult]===a,target:\"confirm_meeting_whole_day\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\" on \").concat(context.day,\". Will it take the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},time:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"time\"in(grammar[context.recResult]||{}),actions:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* assign */ \"a\"])(context=>{return{time:grammar[context.recResult].time};}),target:\"confirm_time\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.day,\". What time is your meeting?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I don't know that\"),on:{ENDSPEECH:\"prompt\"}}}},confirm_meeting_whole_day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===b,target:\"init\"},{cond:context=>grammar2[context.recResult]===a,target:\"confirmed\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])(context=>({type:\"SPEAK\",value:\"Do you want to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" for the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},confirm_time:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===b,target:\"who\"},{cond:context=>grammar2[context.recResult]===a,target:\"confirmed\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])(context=>({type:\"SPEAK\",value:\"Do you want to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" at \").concat(context.time,\"?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},confirmed:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(xstate__WEBPACK_IMPORTED_MODULE_1__[/* send */ \"b\"])(context=>({type:\"SPEAK\",value:\"Your appointment has been created!\"}))}}}}};/* RASA API\n *  */const proxyurl=\"https://cors-anywhere.herokuapp.com/\";const rasaurl='https://rasa-nlu-app.herokuapp.com/model/parse';const nluRequest=text=>fetch(new Request(proxyurl+rasaurl,{method:'POST',headers:{'Origin':'http://localhost:3000/react-xstate-colourchanger'},// only required with proxy\nbody:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(data=>data.json());\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ })\n],[[2,1,2]]]);","inputSourceMap":{"version":3,"sources":["/Users/aggzagoura/react-xstate-colourchanger/src/index.tsx","/Users/aggzagoura/react-xstate-colourchanger/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-6-0!/Users/aggzagoura/react-xstate-colourchanger/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-6-1!/Users/aggzagoura/react-xstate-colourchanger/node_modules/postcss-loader/src/index.js??postcss!/Users/aggzagoura/react-xstate-colourchanger/node_modules/resolve-url-loader/index.js??ref--5-oneOf-6-3!/Users/aggzagoura/react-xstate-colourchanger/node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-6-4!/Users/aggzagoura/react-xstate-colourchanger/src/styles.scss"],"names":["say","text","send","_context","type","value","listen","grammar","person","day","time","grammar2","a","b","promptAndAsk","prompt","initial","states","entry","on","ENDSPEECH","ask","dmMachine","init","CLICK","welcome","RECOGNISED","target","actions","assign","context","option","recResult","query","invoke","id","src","event","nluRequest","onDone","data","intent","name","console","log","onError","menu","cond","todo","timer","appointment","who","nomatch","wholeday","confirm_meeting_whole_day","confirm_time","confirmed","proxyurl","rasaurl","fetch","Request","method","headers","body","then","json"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAWA,QAASA,IAAT,CAAaC,IAAb,CAAyD,CACrD,MAAOC,4DAAI,CAAEC,QAAD,GAA2B,CAAEC,IAAI,CAAE,OAAR,CAAiBC,KAAK,CAAEJ,IAAxB,CAA3B,CAAD,CAAX,CACH,CAED,QAASK,OAAT,EAAgD,CAC5C,MAAOJ,4DAAI,CAAC,QAAD,CAAX,CACH,CAED,KAAMK,QACL,CAAG,CACA,OAAQ,CAAEC,MAAM,CAAE,gBAAV,CADR,CAEA,OAAQ,CAAEA,MAAM,CAAE,YAAV,CAFR,CAGA,SAAU,CAAEA,MAAM,CAAE,cAAV,CAHV,CAIA,OAAQ,CAAEA,MAAM,CAAE,WA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","file":"x","sourcesContent":["// import \"./styles.scss\";\n// import * as React from \"react\";\n// import * as ReactDOM from \"react-dom\";\n// import { Machine, assign, send, State } from \"xstate\";\n// import { useMachine, asEffect } from \"@xstate/react\";\n// import { inspect } from \"@xstate/inspect\";\n// import { dmMachine } from \"./dmAppointment\";\n\n\n// inspect({\n//     url: \"https://statecharts.io/inspect\",\n//     iframe: false\n// });\n\n// import { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\n\n\n// const machine = Machine<SDSContext, any, SDSEvent>({\n//     id: 'root',\n//     type: 'parallel',\n//     states: {\n//         dm: {\n//             ...dmMachine\n//         },\n//         asrtts: {\n//             initial: 'idle',\n//             states: {\n//                 idle: {\n//                     on: {\n//                         LISTEN: 'recognising',\n//                         SPEAK: {\n//                             target: 'speaking',\n//                             actions: assign((_context, event) => { return { ttsAgenda: event.value } })\n//                         }\n//                     }\n//                 },\n//                 recognising: {\n// \t\t    initial: 'progress',\n//                     entry: 'recStart',\n//                     exit: 'recStop',\n//                     on: {\n//                         ASRRESULT: {\n//                             actions: ['recLogResult',\n//                                 assign((_context, event) => { return { recResult: event.value } })],\n//                             target: '.match'\n//                         },\n//                         RECOGNISED: 'idle'\n//                     },\n//                     states: {\n// \t\t    \tprogress: {\n// \t\t\t},\t    \t\t\t\t\t\n//                         match: {\n//                             entry: send('RECOGNISED'),\n//                         },\n//                     }\n//                 },\n//                 speaking: {\n//                     entry: 'ttsStart',\n//                     on: {\n//                         ENDSPEECH: 'idle',\n//                     }\n//                 }\n//             }\n//         }\n//     },\n// },\n//     {\n//         actions: {\n//             recLogResult: (context: SDSContext) => {\n//                 /* context.recResult = event.recResult; */\n//                 console.log('<< ASR: ' + context.recResult);\n//             },\n//             test: () => {\n//                 console.log('test')\n//             },\n//             logIntent: (context: SDSContext) => {\n//                 /* context.nluData = event.data */\n//                 console.log('<< NLU intent: ' + context.nluData.intent.name)\n//             }\n//         },\n//     });\n\n\n\n// interface Props extends React.HTMLAttributes<HTMLElement> {\n//     state: State<SDSContext, any, any, any>;\n// }\n// const ReactiveButton = (props: Props): JSX.Element => {\n//     switch (true) {\n//         case props.state.matches({ asrtts: 'recognising' }):\n//             return (\n//                 <button type=\"button\" className=\"glow-on-hover\"\n//                     style={{ animation: \"glowing 20s linear\" }} {...props}>\n//                     Listening...\n//                 </button>\n//             );\n//         case props.state.matches({ asrtts: 'speaking' }):\n//             return (\n//                 <button type=\"button\" className=\"glow-on-hover\"\n//                     style={{ animation: \"bordering 1s infinite\" }} {...props}>\n//                     Speaking...\n//                 </button>\n//             );\n//         default:\n//             return (\n//                 <button type=\"button\" className=\"glow-on-hover\" {...props}>\n//                     Click to start\n//                 </button >\n//             );\n//     }\n// }\n\n// function App() {\n//     const { speak, cancel, speaking } = useSpeechSynthesis({\n//         onEnd: () => {\n//             send('ENDSPEECH');\n//         },\n//     });\n//     const { listen, listening, stop } = useSpeechRecognition({\n//         onResult: (result: any) => {\n//             send({ type: \"ASRRESULT\", value: result });\n//         },\n//     });\n//     const [current, send, service] = useMachine(machine, {\n//         devTools: true,\n//         actions: {\n//             recStart: asEffect(() => {\n//                 console.log('Ready to receive a color command.');\n//                 listen({\n//                     interimResults: false,\n//                     continuous: true\n//                 });\n//             }),\n//             recStop: asEffect(() => {\n//                 console.log('Recognition stopped.');\n//                 stop()\n//             }),\n//             changeColour: asEffect((context) => {\n//                 console.log('Repainting...');\n//                 document.body.style.background = context.recResult;\n//             }),\n//             ttsStart: asEffect((context, effect) => {\n//                 console.log('Speaking...');\n//                 speak({ text: context.ttsAgenda })\n//             }),\n//             ttsCancel: asEffect((context, effect) => {\n//                 console.log('TTS STOP...');\n//                 cancel()\n//             })\n//             /* speak: asEffect((context) => {\n// \t     * console.log('Speaking...');\n//              *     speak({text: context.ttsAgenda })\n//              * } */\n//         }\n//     });\n\n\n//     return (\n//         <div className=\"App\">\n//             <ReactiveButton state={current} onClick={() => send('CLICK')} />\n//         </div>\n//     )\n// };\n\n\n\n// /* RASA API\n//  *  */\n// const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n// const rasaurl = 'https://rasa-nlu-app.herokuapp.com/model/parse'\n// const nluRequest = (text: string) =>\n//     fetch(new Request(proxyurl + rasaurl, {\n//         method: 'POST',\n//         headers: { 'Origin': 'http://maraev.me' }, // only required with proxy\n//         body: `{\"text\": \"${text}\"}`\n//     }))\n//         .then(data => data.json());\n\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(\n//     <App />,\n//     rootElement);\n\n\nimport { MachineConfig, Machine, send, Action, assign } from \"xstate\";\nimport \"./styles.scss\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { inspect } from \"@xstate/inspect\";\n\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nfunction listen(): Action<SDSContext, SDSEvent> {\n    return send('LISTEN')\n}\n\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string } \n} = {\n    \"John\": { person: \"John Appleseed\" },\n    \"Mary\": { person: \"Mary Curie\" },\n    \"George\": { person: \"George Smith\" },\n    \"Axel\": { person: \"Axel Rose\" },\n    \"Sebastian\": { person: \"Sebastian Bach\" },\n\n    \"on Monday\": { day: \"Monday\" },\n    \"on Tuesday\": { day: \"Tuesday\" },\n    \"on Wednesday\": { day: \"Wednesday\" },\n    \"on Thursday\": { day: \"Thursday\" },\n    \"on Friday\": { day: \"Friday\" },\n\t\"on Saturday\": { day: \"Saturday\" },\n\t\"on Sunday\": { day: \"Sunday\" },\n\n\t\"at 5\": { time: \"5:00\" },\n\t\"at 6\": { time: \"6:00\" },\n    \"at 7\": { time: \"7:00\" },\n    \"at 8\": { time: \"8:00\" },\n    \"at 9\": { time: \"9:00\" },\n    \"at 10\": { time: \"10:00\" },\n    \"at 11\": { time: \"11:00\" },\n    \"at 12\": { time: \"12:00\" }\n}\n\nconst grammar2: { [index: string]: boolean } = {\n    \"yes of course\": true,\n    \"sure\": true,\n    \"absolutely\": true,\n    \"yes\": true,\n    \"no way\": false,\n    \"no\": false\n}\n\nlet a = grammar2[\"yes\"]\nlet b = grammar2[\"no\"]\n\nfunction promptAndAsk(prompt: string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: 'prompt',\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: 'ask' }\n            },\n            ask: {\n                entry: send('LISTEN')\n            },\n        }})\n}\n\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n   \n    initial: 'init',\n    states: {\n        init: {\n            on: {\n                CLICK: 'welcome'\n            }            \n        },        \n\n        welcome: {\n            on: {\n                RECOGNISED: {\n                    target: \"query\",\n                    actions: assign((context) => { return { option: context.recResult } }),\n                }    \n            },\n                    ...promptAndAsk(\"What would you like to do? Your options are appointment, to do item or timer\")\n        },\n\n\n        query: {\n            invoke: {\n                id: 'rasa',\n                src: (context, event) => nluRequest(context.option),\n                onDone: {\n                    target: 'menu',\n                    actions: [assign((context, event) => { return  {option: event.data.intent.name} }),\n                    (context: SDSContext, event: any) => console.log(event.data)]\n                    //actions: assign({ intent: (context: SDSContext, event: any) =>{ return event.data }})\n\n                },\n                onError: {\n                    target: 'welcome',\n                    actions: (context, event) => console.log(event.data)\n                }\n            }\n        },\n\n        menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [\n                    { target: 'todo', cond: (context) => context.option === 'todo' },\n                    { target: 'timer', cond: (context) => context.option === 'timer' },\n                    { target: 'appointment', cond: (context) => context.option === 'appointment' }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. I understand.`\n                    })),\n        },\n     /*            nomatch: {\n                    entry: say(\"Sorry, I don't understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n        } */ \n            }       \n        },\n\n\n        todo: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let's create a to do item`\n                    }))\n                }}\n        },\n        \n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let's create a timer`\n                    }))\n                }}\n        },\n        \n        \n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let's create an appointment`\n                    }))\n                }}\n        },\n        who: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n\t\t\t\t\tcond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I don't know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n                    target: \"wholeday\"\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`,\n                    })),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I didn't understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        wholeday: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === b),\n                    target: \"time\"\n                },\n\t\t{cond: (context) => (grammar2[context.recResult] === a),\n\t\ttarget: \"confirm_meeting_whole_day\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person} on ${context.day}. Will it take the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry, I don't understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t            }\n                }\n\t},\n        time: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"time\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { time: grammar[context.recResult].time } }),\n                    target: \"confirm_time\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.day}. What time is your meeting?`,\n                    \n                    })),\n            on: { ENDSPEECH: \"ask\" }\n                },\n        ask: {\n            entry: listen()\n                },\n        nomatch: {\n            entry: say(\"Sorry I don't know that\"),\n        on: { ENDSPEECH: \"prompt\" }\n                }\n                }\n        },\n        confirm_meeting_whole_day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === b),\n                    target: \"init\"\n                },\n\t\t{cond: (context) => (grammar2[context.recResult] === a),\n\t\ttarget: \"confirmed\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Do you want to create an appointment with ${context.person} on ${context.day} for the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry, I don't understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t           }\n                }\n\n\t},\n    confirm_time: {\n        initial: \"prompt\",\n        on:  {\n            RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === b),\n                target: \"who\"\n            },\n    {cond: (context) => (grammar2[context.recResult] === a),\n    target: \"confirmed\"\n    },\n            { target: \".nomatch\" }]\n        },\n        states: {\n            prompt: {\n               entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Do you want to create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n                })),\n        on: { ENDSPEECH: \"ask\" }\n            },\n    ask: {\n         entry: listen()\n        },\n    nomatch: {\n        entry: say(\"Sorry, I don't understand\"),\n    on: { ENDSPEECH: \"prompt\" }\n           }\n            },\n        },\n    confirmed: {\n        initial: \"prompt\",\n        on: { ENDSPEECH: \"init\" },\n        states: {\n            prompt: {\n                entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Your appointment has been created!`\n                }))\n            },\n    }\n    }\n    }})\n\n\n\n\n/* RASA API\n *  */\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst rasaurl = 'https://rasa-nlu-app.herokuapp.com/model/parse'\nconst nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: 'POST',\n        headers: { 'Origin': 'http://localhost:3000/react-xstate-colourchanger' }, // only required with proxy\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json());\n\n\n","// extracted by mini-css-extract-plugin"]}}